server:
  port: 8080
spring:
  application:
    #指定应用名称，可选
    name: reggie_take_out

  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/reggie?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: root
  #   #使用Sharding-JDBC实现程序的分库读写分离
  #  shardingsphere:
  #    datasource:
  #      names:
  #        master,slave
  #      # 主数据源
  #      master:
  #        type: com.alibaba.druid.pool.DruidDataSource
  #        driver-class-name: com.mysql.cj.jdbc.Driver
  #        url: jdbc:mysql://主数据库IP地址:3306/reggie?characterEncoding=utf-8  (如果报错尝试加&useSSL=false)
  #        username: root
  #        password: root
  #      # 从数据源
  #      slave:
  #        type: com.alibaba.druid.pool.DruidDataSource
  #        driver-class-name: com.mysql.cj.jdbc.Driver
  #        url: jdbc:mysql://从数据库IP地址:3306/reggie?characterEncoding=utf-8
  #        username: root
  #        password: root
  #    masterslave:
  #      # 读写分离配置
  #      load-balance-algorithm-type: round_robin #轮询（如果有多个从数据库则轮流进行查询）
  #      # 最终的数据源名称
  #      name: dataSource
  #      # 主库数据源名称
  #      master-data-source-name: master
  #      # 从库数据源名称列表，多个逗号分隔
  #      slave-data-source-names: slave
  #    props:
  #      sql:
  #        show: true #开启SQL显示，默认false
  #  main:
  #    allow-bean-definition-overriding: true  #配置允许bean定义覆盖配置项
  #redis相关配置
  redis:
    host: localhost
    port: 6379
    #password: 123456
    database: 0 #操作的是0号数据库
    jedis:
      #redis连接池配置
      pool:
        max-active: 8     #最大连接数
        max-wait: 1000ms  #连接池最大阻塞等待时间
        max-idle: 4       #连接池中的最大空闲连接
        min-idle: 0       #连接池中的最小空闲连接
  cache:
    redis:
      time-to-live: 1800000  #设置缓存过期时间30分钟（单位ms）

mybatis-plus:
  configuration:
    #在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射
    #例如：address_book --> AddressBook
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      #主键生成策略:ASSIGN_ID --> 配置雪花算法生成ID
      id-type: ASSIGN_ID

reggie:
  path: F:\01tempPicture\
#  path: /usr/local/img/    #部署到Linux中需要修改图片存储路径

